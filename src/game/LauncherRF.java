package game;

import java.awt.event.KeyEvent;
import obj.Settings;
import util.Dialog;
import util.Graphic; // Se utiliza para definir dimensiones, escala, etc.

public class LauncherRF extends javax.swing.JFrame {
    
    private PrePartida secundaria;
    private SumaTres juego;
    

    /**
     * Creates new form LauncherRF
     */
    public LauncherRF() {
        initComponents();
        secundaria = new PrePartida(this);
        secundaria.setVisible(true);
    }
    
    public void launch(Settings op) {
        juego = new SumaTres(op);
        add(juego);
        setBounds(0, 0, Graphic.defineX(juego) + 15, Graphic.defineY(juego) + 39);
        setVisible(true);
        
        /*
         * Se activan los trucos, cambios de modo, etc, en base a si el modo
         * actual es experimental o no. Siguiendo las reglas del enunciado
         * original, el modo clásico es imperturbable por estos cambios.
         */
        jmiTrucos.setEnabled(op.isExperimental());
        jmiModoExperimental.setEnabled(op.isExperimental());
        jmiModoClassic.setEnabled(op.isExperimental());
        jmiModoClassic.setSelected(op.isExperimental());
        jmiModoExperimental.setSelected(op.isExperimental());
        jmiExtrasConsole.setSelected(!op.isExperimental());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jmiModoGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        jmiResultados = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiSalir = new javax.swing.JMenuItem();
        mnuTrucos = new javax.swing.JMenu();
        jmiTrucos = new javax.swing.JCheckBoxMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jmiTrucosAñadir = new javax.swing.JMenuItem();
        jmiTrucosEliminar = new javax.swing.JMenuItem();
        jmiTrucosPuntos = new javax.swing.JMenuItem();
        jmiTrucosUndo = new javax.swing.JMenuItem();
        mnuModo = new javax.swing.JMenu();
        jmiModoClassic = new javax.swing.JRadioButtonMenuItem();
        jmiModoExperimental = new javax.swing.JRadioButtonMenuItem();
        mnuExtras = new javax.swing.JMenu();
        jmiExtrasConsole = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SumaTres");
        setIconImage(Graphic.ICON.getImage());
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Juego", jPanel1);

        jToolBar1.setRollover(true);
        jToolBar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jToolBar1KeyPressed(evt);
            }
        });
        jTabbedPane1.addTab("Info", jToolBar1);

        mnuArchivo.setText("Archivo");
        mnuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuArchivoActionPerformed(evt);
            }
        });

        jmiResultados.setText("Resultados prev.");
        mnuArchivo.add(jmiResultados);
        mnuArchivo.add(jSeparator1);

        jmiSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.META_DOWN_MASK));
        jmiSalir.setText("Salir");
        mnuArchivo.add(jmiSalir);

        jMenuBar1.add(mnuArchivo);

        mnuTrucos.setText("Trucos");

        jmiTrucos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiTrucos.setText("Trucos");
        jmiTrucos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTrucosActionPerformed(evt);
            }
        });
        mnuTrucos.add(jmiTrucos);
        mnuTrucos.add(jSeparator2);

        jmiTrucosAñadir.setText("Añadir pieza");
        jmiTrucosAñadir.setEnabled(false);
        jmiTrucosAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTrucosAñadirActionPerformed(evt);
            }
        });
        mnuTrucos.add(jmiTrucosAñadir);

        jmiTrucosEliminar.setText("Eliminar pieza");
        jmiTrucosEliminar.setEnabled(false);
        jmiTrucosEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTrucosEliminarActionPerformed(evt);
            }
        });
        mnuTrucos.add(jmiTrucosEliminar);

        jmiTrucosPuntos.setText("Añadir puntos");
        jmiTrucosPuntos.setEnabled(false);
        jmiTrucosPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTrucosPuntosActionPerformed(evt);
            }
        });
        mnuTrucos.add(jmiTrucosPuntos);

        jmiTrucosUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiTrucosUndo.setText("Undo");
        jmiTrucosUndo.setEnabled(false);
        jmiTrucosUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTrucosUndoActionPerformed(evt);
            }
        });
        mnuTrucos.add(jmiTrucosUndo);

        jMenuBar1.add(mnuTrucos);

        mnuModo.setText("Modo");

        jmiModoGroup.add(jmiModoClassic);
        jmiModoClassic.setSelected(true);
        jmiModoClassic.setText("Clásico");
        jmiModoClassic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiModoClassicActionPerformed(evt);
            }
        });
        mnuModo.add(jmiModoClassic);

        jmiModoGroup.add(jmiModoExperimental);
        jmiModoExperimental.setText("Experimental");
        jmiModoExperimental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiModoExperimentalActionPerformed(evt);
            }
        });
        mnuModo.add(jmiModoExperimental);

        jMenuBar1.add(mnuModo);

        mnuExtras.setText("Extras");
        mnuExtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExtrasActionPerformed(evt);
            }
        });

        jmiExtrasConsole.setSelected(true);
        jmiExtrasConsole.setText("Salida por consola");
        jmiExtrasConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExtrasConsoleActionPerformed(evt);
            }
        });
        mnuExtras.add(jmiExtrasConsole);

        jMenuBar1.add(mnuExtras);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiTrucosAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTrucosAñadirActionPerformed
        juego.getTablero().colocarPieza();
    }//GEN-LAST:event_jmiTrucosAñadirActionPerformed

    private void jmiTrucosEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTrucosEliminarActionPerformed
        juego.getTablero().quitarPieza();
    }//GEN-LAST:event_jmiTrucosEliminarActionPerformed

    /**
     * Evento que activa el resto de opciones del menú "Trucos". Se supone que
     * los trucos están desactivados antes de este evento y estarán activados
     * después, sin ninguna excepción.
     * 
     * Antes de activar los trucos, muestra una alerta al usuario para que
     * confirme la acción.
     * @param evt 
     */
    private void jmiTrucosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTrucosActionPerformed
        if(Dialog.confirm("Activar los trucos marcará el resultado de la partida como inválido. ¿Desea continuar?")) {
            juego.enableCheats();
            jmiTrucos.setEnabled(false);
            jmiTrucosAñadir.setEnabled(true);
            jmiTrucosEliminar.setEnabled(true);
            jmiTrucosUndo.setEnabled(true);
            jmiTrucosPuntos.setEnabled(true);
        }
    }//GEN-LAST:event_jmiTrucosActionPerformed

    private void jmiTrucosUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTrucosUndoActionPerformed
        juego.undo();
    }//GEN-LAST:event_jmiTrucosUndoActionPerformed

    private void mnuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuArchivoActionPerformed
        juego.finalDePartida();
    }//GEN-LAST:event_mnuArchivoActionPerformed

    private void jmiTrucosPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTrucosPuntosActionPerformed
        juego.addPuntos(Integer.parseInt(Dialog.input("Número de puntos a añadir:")));
    }//GEN-LAST:event_jmiTrucosPuntosActionPerformed

    private void jmiModoClassicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiModoClassicActionPerformed
        boolean check = true;
        if(!juego.cheatsUsed()) check = Dialog.confirm("Esta acción activa los trucos. ¿Desea continuar?");
        if(check) {
            juego.enableCheats();
            juego.setClassicMode();
            jmiTrucos.setEnabled(false);
            jmiTrucosAñadir.setEnabled(false);
            jmiTrucosEliminar.setEnabled(false);
            jmiTrucosPuntos.setEnabled(false);
            jmiTrucosUndo.setEnabled(false);
        }
    }//GEN-LAST:event_jmiModoClassicActionPerformed

    private void jmiModoExperimentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiModoExperimentalActionPerformed
        // Si se llega aquí, significa que el usuario partió del modo experimental,
        // pasó al modo clásico y con esta acción vuelve al modo experimental, por
        // lo que no es necesario volver a activar los trucos ni mostrar alertas.
        juego.setExperimentalMode();
        jmiTrucosActionPerformed(evt); // se activan los trucos.
    }//GEN-LAST:event_jmiModoExperimentalActionPerformed

    private void jToolBar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jToolBar1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToolBar1KeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        juego.rerouteKeyboard(evt);
    }//GEN-LAST:event_jPanel1KeyPressed

    private void jmiExtrasConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExtrasConsoleActionPerformed
        juego.toggleConsole();
    }//GEN-LAST:event_jmiExtrasConsoleActionPerformed

    private void mnuExtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExtrasActionPerformed

    }//GEN-LAST:event_mnuExtrasActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        //juego.rerouteKeyboard(evt);
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LauncherRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LauncherRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LauncherRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LauncherRF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LauncherRF().setVisible(false);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JCheckBoxMenuItem jmiExtrasConsole;
    private javax.swing.JRadioButtonMenuItem jmiModoClassic;
    private javax.swing.JRadioButtonMenuItem jmiModoExperimental;
    private javax.swing.ButtonGroup jmiModoGroup;
    private javax.swing.JMenuItem jmiResultados;
    private javax.swing.JMenuItem jmiSalir;
    private javax.swing.JCheckBoxMenuItem jmiTrucos;
    private javax.swing.JMenuItem jmiTrucosAñadir;
    private javax.swing.JMenuItem jmiTrucosEliminar;
    private javax.swing.JMenuItem jmiTrucosPuntos;
    private javax.swing.JMenuItem jmiTrucosUndo;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenu mnuExtras;
    private javax.swing.JMenu mnuModo;
    private javax.swing.JMenu mnuTrucos;
    // End of variables declaration//GEN-END:variables
}
