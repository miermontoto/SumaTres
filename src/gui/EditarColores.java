package gui;

import util.visual.PiezaDisplayer;
import game.LauncherRF;
import java.awt.Color;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import obj.Pieza;
import obj.Settings;
import obj.Tablero;

/**
 * Interfaz que permite modificar los colores y el brillo de cada pieza.
 * @author Juan Mier
 */
public class EditarColores extends javax.swing.JFrame {

    private LauncherRF principal;
    private DefaultListModel model;
    private PiezaDisplayer displayer;
    private static HashMap<Integer, Color> rawColors = new HashMap<>();
    private static HashMap<Integer, Integer> rawBrightness = new HashMap<>();

    public EditarColores() {
        initComponents();
        model = new DefaultListModel();
        updateValues();
        lstValores.setModel(model);
        lstValores.setSelectedIndex(0);

        displayer = (PiezaDisplayer) pnlPieza;
    }

    public EditarColores(LauncherRF p) {
        this();
        principal = p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstValores = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnRandomizar = new javax.swing.JButton();
        btnMásBrillo = new javax.swing.JButton();
        btnMenosBrillo = new javax.swing.JButton();
        pnlPieza = new PiezaDisplayer();
        sldBrightness = new javax.swing.JSlider();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setTitle("Editar colores");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        lstValores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstValores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstValoresValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstValores);

        jLabel1.setText("Color:");

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRandomizar.setText("Randomizar");
        btnRandomizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomizarActionPerformed(evt);
            }
        });

        btnMásBrillo.setText("+");
        btnMásBrillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMásBrilloActionPerformed(evt);
            }
        });

        btnMenosBrillo.setText("-");
        btnMenosBrillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosBrilloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPiezaLayout = new javax.swing.GroupLayout(pnlPieza);
        pnlPieza.setLayout(pnlPiezaLayout);
        pnlPiezaLayout.setHorizontalGroup(
            pnlPiezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlPiezaLayout.setVerticalGroup(
            pnlPiezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 68, Short.MAX_VALUE)
        );

        sldBrightness.setMaximum(3);
        sldBrightness.setMinimum(-3);
        sldBrightness.setValue(0);
        sldBrightness.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldBrightnessStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMenosBrillo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sldBrightness, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMásBrillo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRandomizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlPieza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(31, 31, 31))
                            .addComponent(pnlPieza, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMásBrillo)
                            .addComponent(sldBrightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMenosBrillo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRandomizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        updateValues();
    }//GEN-LAST:event_formFocusGained

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if(!lstValores.isSelectionEmpty()) {
            int selectedValue = getSelectedValue();
            Color newColor = JColorChooser.showDialog(null, "Seleccione nuevo color", Pieza.getColores().get(selectedValue), false);
            if(newColor != null) {
                Pieza.getColores().put(selectedValue, newColor);
                rawColors.put(selectedValue, newColor);
                rawBrightness.put(selectedValue, 0);
                refresh(selectedValue);
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed


    private void refresh(int value) {
        updateColorOfValue(value);
        updateBrightnessOfValue(value);
        updateColorLabel();
        sldBrightness.setValue(rawBrightness.get(value));
        principal.getPartida().repaint();
    }

    private void lstValoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstValoresValueChanged
        updateColorLabel();
        int selectedValue = getSelectedValue();
        if(!rawColors.containsKey(selectedValue)) {
            // Si el diccionario no contiene el color, tampoco está contenido en el diccionario de brillos.
            rawColors.put(selectedValue, Pieza.getColores().get(selectedValue));
            rawBrightness.put(selectedValue, 0); // Se asume punto de partida para el brillo.
        }
    }//GEN-LAST:event_lstValoresValueChanged

    private void btnRandomizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomizarActionPerformed
        int selectedValue = getSelectedValue();
        Color newColor = Pieza.generateColorForValue(selectedValue);
        rawColors.put(selectedValue, newColor);
        rawBrightness.put(selectedValue, 0);
        phaseColor(selectedValue, newColor);
        refresh(selectedValue);
    }//GEN-LAST:event_btnRandomizarActionPerformed

    private void btnMenosBrilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenosBrilloActionPerformed
        int selectedValue = getSelectedValue();
        int currentBrightness = rawBrightness.get(selectedValue);
        if(currentBrightness == -3) return;
        sldBrightness.setValue(currentBrightness--);
        rawBrightness.put(selectedValue, currentBrightness--);
        phaseColor(selectedValue, getColorFromBrightness(selectedValue));
        refresh(selectedValue);
    }//GEN-LAST:event_btnMenosBrilloActionPerformed

    private void btnMásBrilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMásBrilloActionPerformed
        int selectedValue = getSelectedValue();
        int currentBrightness = rawBrightness.get(selectedValue);
        if(currentBrightness == 3) return;
        rawBrightness.put(selectedValue, currentBrightness++);
        sldBrightness.setValue(currentBrightness++);
        phaseColor(selectedValue, getColorFromBrightness(selectedValue));
        refresh(selectedValue);
    }//GEN-LAST:event_btnMásBrilloActionPerformed

    private void sldBrightnessStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldBrightnessStateChanged
        int selectedValue = getSelectedValue();
        rawBrightness.put(selectedValue, sldBrightness.getValue());
        phaseColor(selectedValue, getColorFromBrightness(selectedValue));
        refresh(selectedValue);

    }//GEN-LAST:event_sldBrightnessStateChanged

    private void phaseColor(int value, Color color) {
        Pieza.getColores().put(value, color);
        Pieza.updateBrightnessForValue(value);
    }

    private Color getColorFromBrightness(int value) {
        Color tempColor = rawColors.get(value);
        int tempBrightness = rawBrightness.get(value);
        if(tempBrightness > 0) for(int i = 0; i < tempBrightness; i++) tempColor = tempColor.brighter();
        else if(tempBrightness < 0) for(int i = 0; i < Math.abs(tempBrightness); i++) tempColor = tempColor.darker();
        return tempColor;
    }

    private int getSelectedValue() {
        return (int) Pieza.getColores().keySet().toArray()[lstValores.getSelectedIndex() + 3];
    }
    private void updateColorLabel() {
        displayer.setPieza((int) Pieza.getColores().keySet().toArray()[lstValores.getSelectedIndex() + 3]);
        displayer.repaint();
    }

    public void updateValues() {
        model.removeAllElements();
        for(Integer i : Pieza.getColores().keySet()) {
            model.addElement(i);
        }
        model.removeElement(-2);
        model.removeElement(-1);
        model.removeElement(0);
    }

    private void updateColorOfValue(int value) {
        Settings op = principal.getPartida().getSettings();
        Tablero tab = principal.getPartida().getTablero();
        Color newColor = Pieza.getColores().get(value);
        int amount = tab.amount();

        for(int i = 0, k = 0; i < op.getX() && k < amount; i++) {
            for(int j = 0; j < op.getY() && k < amount; j++) {
                if(tab.getTab(i, j) != 0) {
                    k++;
                    if(tab.getTab(i, j) == value) tab.getPieza(i, j).setColor(newColor);
                }
            }
        }
    }

    private void updateBrightnessOfValue(int value) {
        boolean newBrillo = Pieza.getBrillos().get(value);
                for(int i = 0; i < principal.getPartida().getSettings().getX(); i++) {
            for(int j = 0; j < principal.getPartida().getSettings().getY(); j++) {
                if(principal.getPartida().getTab(i, j) == value) principal.getPartida().getTablero().getPieza(i, j).setBrillo(newBrillo);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EditarColores().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnMenosBrillo;
    private javax.swing.JButton btnMásBrillo;
    private javax.swing.JButton btnRandomizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstValores;
    private javax.swing.JPanel pnlPieza;
    private javax.swing.JSlider sldBrightness;
    // End of variables declaration//GEN-END:variables
}
